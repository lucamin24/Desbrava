import streamlit as st

from pathlib import Path
import google.generativeai as genai
from dotenv import load_dotenv
import pandas as pd
import numpy as np
import os
import time

# Carrega as vari√°veis de ambiente do arquivo .env
load_dotenv()

# Importa os detalhes das vagas de emprego
from jobs_details import jobs_details as data

# Instru√ß√£o do sistema para o modelo generativo
system_instruction = f"""

Seu nome √© Robson, um assistente virtual que ajuda um usu√°rio a encontrar uma vaga de emprego.
Voc√™ tem informa√ß√µes sobre 20 vagas de emprego do Google com processo seletivo aberto.

Informa√ß√£o sobre as vagas em formato JSON: {data}

Seu trabalho √© entender o perfil do usu√°rio por meio de perguntas, para no final indicar vagas para que ele possa se inscrever.

Tenha certeza de perguntar onde ele mora, quantos anos tem de experi√™ncia, seus interesses e experi√™ncias e qual √°rea de atua√ß√£o ele quer al√©m de outras perguntas que ajudem a encontrar uma vaga que d√™ match com o perfil dele.

Quando entender o perfil do usu√°rio, sugerir vagas que fa√ßam sentido ao perfil dele, mostre as informa√ß√µes da vaga e evidencie os pontos que o usu√°rio n√£o atende da vaga.

Sempre que recomendar uma vaga envie o link (campo "Link para aplicar") do processo seletivo junto.

"""
# Configura a API para o modelo genai
genai.configure(api_key=os.getenv("gemini_api_key"))


# Inicializa o modelo generativo
model = genai.GenerativeModel(
  model_name="gemini-1.5-pro-latest",
  system_instruction=system_instruction
)

# Mensagem inicial do modelo
initial_model_message = "Ol√°, eu sou o Robson, um assistente virtual que te ajuda a encontrar a vaga de emprego ideal para voc√™, com processo seletivo aberto. Como voc√™ se chama?"

# Mensagem com as vagas dispon√≠veis

# Inicializa a conversa do assistente virtual
if "chat_encontra" not in st.session_state:
    st.session_state.chat_encontra = model.start_chat(history=[{'role':'model', 'parts': [initial_model_message]}])

# T√≠tulo da p√°gina
st.title('EncontraJobüïµÔ∏è')

# Introdu√ß√£o do assistente virtual
st.write("O Assistente Virtual Robson est√° aqui para te ajudar a encontrar a vaga de emprego ideal para voc√™! Atualmente o assitente tem informa√ß√µes e links de 20 vagas do Google com processo seletivo aberto, e logo ter√° mais vagas de outras empresas. Vamos come√ßar?")

# Exibe o hist√≥rico de conversa
for i, message in enumerate(st.session_state.chat_encontra.history):
  if message.role == "user":
    with st.chat_message("user"):
      st.markdown(message.parts[0].text)
  else:
    with st.chat_message("assistant"):
      st.markdown(message.parts[0].text)

# Entrada do usu√°rio
user_query = st.chat_input('Voc√™ pode falar ou digitar sua resposta aqui:')


# Processamento da entrada do usu√°rio e resposta do assistente
if user_query is not None and user_query != '':
    with st.chat_message("user"):
      st.markdown(user_query)
    with st.chat_message("assistant"):
        ai_query = st.session_state.chat_encontra.send_message(user_query).text
        st.markdown(ai_query)
